plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.0'
}

repositories {
    mavenCentral()
}


group = 'com.business'

dependencies {
    implementation project(':modules:configuration:module-meta-configuration')
    implementation project(':modules:configuration:module-configuration-jasypt')
    implementation project(':modules:configuration:module-database-configuration')
    implementation project(':modules:configuration:module-jpa-configuration')
    implementation project(':modules:configuration:module-framework-configuration')
    implementation project(':modules:configuration:module-configuration-redis')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // QueryDSL 의존성 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    runtimeOnly 'mysql:mysql-connector-java:8.0.29'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation project(':modules:configuration:module-test-starter')
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Q클래스 파일 경로 설정
def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [ generated ]
}

// clean 시 generated 파일 제거
clean {
    delete file('src/main/generated')
}

